import os
import asyncio
from telethon import TelegramClient, events
from telethon.sessions import StringSession

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
API_ID = int(os.getenv("TELEGRAM_API_ID"))
API_HASH = os.getenv("TELEGRAM_API_HASH")
SESSION_STRING = os.getenv("TELETHON_SESSION")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Å—Å–∏–∏
if not SESSION_STRING:
    print("‚ùå –û—à–∏–±–∫–∞: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è TELETHON_SESSION –ø—É—Å—Ç–∞!")
    exit(1)
else:
    print("‚úÖ –°–µ—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è.")

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ Telethon —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º StringSession
client = TelegramClient(StringSession(SESSION_STRING), API_ID, API_HASH)

# –ö–∞–Ω–∞–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
CHANNEL_USERNAME = '@POVITRYANAZZH'

# –ö–∞–Ω–∞–ª—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
MONITORED_CHANNELS = [
    '@INSIDERUKR', '@BLYSKAVKA_UA', '@VANEK_NIKOLAEV',
    '@MON1TOR_UA', '@ZHYTO_BEST', '@KUDY_LETYT',
    '@ALARMUKRAINE', '@RAKETA_TREVOGA'
]

# –ö–ª—é—á–µ–≤—ã–µ –∏ –º–∏–Ω—É—Å-—Å–ª–æ–≤–∞
KEYWORDS = [
    '—Ä–∞–∫–µ—Ç–Ω–∞—è –∞—Ç–∞–∫–∞', '–ø–æ–≤—ñ—Ç—Ä—è–Ω–∞ —Ç—Ä–∏–≤–æ–≥–∞', '–≤–æ–∑–¥—É—à–Ω–∞—è —Ç—Ä–µ–≤–æ–≥–∞', '–ñ–∏—Ç–æ–º–∏—Ä', '–ë–ø–õ–ê',
    '–û–∑–µ—Ä–Ω–µ', '–ñ–∏—Ç–æ–º–∏—Ä–∞', '–ñ–∏—Ç–æ–º–∏—Ä—â–∏–Ω–∞', '–ñ–∏—Ç–æ–º—â–∏–Ω—É', '–ñ–∏—Ç–æ–º—â–∏–Ω–∏', '–ñ–∏—Ç–æ–º—Å—å–∫—É',
    '–ñ–∏—Ç–æ–º—Å—å–∫–æ—ó', '–ñ–∏—Ç–æ–º–∏—Ä—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å', '–ë–∞–ª—ñ—Å—Ç–∏–∫–∞', '–ó–∞–≥—Ä–æ–∑–∞ –±–∞–ª—ñ—Å—Ç–∏–∫–∏', '–ú–æ–ø–µ–¥–∏',
    '–®–∞—Ö–µ–¥–∏', '–®–∞—Ö–µ–¥—ã', '–º–æ–ø–µ–¥—ã', '—à–∞—Ö–µ–¥–æ–≤', '—à–∞—Ö–µ–¥—ñ–≤', '–º–æ–ø–µ–¥–æ–≤', '–º–æ–ø–µ–¥–∏',
    '–º–æ–ø–µ–¥', '—à–∞—Ö–µ–¥', '—Ä–∞–∫–µ—Ç–∞', '—Ä–∞–∫–µ—Ç—ã', '–±–∞–ª—ñ—Å—Ç–∏–∫–∏', '–ö–ê–ë', '—Ä–∞–∫–µ—Ç–æ–π',
    '—Ä–∞–∫–µ—Ç–Ω–∞ –Ω–µ–±–µ–∑–ø–µ–∫–∞', '–±–∞–ª–∏—Å—Ç–∏–∫–æ–π', '—Ç—É-95', '–¢—É-22–ú3', '–¶—ñ–ª—å –Ω–∞', '–¶–µ–ª—å –Ω–∞',
    '–í—Ç—Ä–∞—Ç–∏ –≤—ñ–π—Å—å–∫ —Ä–æ—Å—ñ—ó', '–ê–∫—Ç—É–∞–ª—å–Ω–∞ –∫–∞—Ä—Ç–∞ –ø–æ–≤—ñ—Ç—Ä—è–Ω–∏—Ö —Ç—Ä–∏–≤–æ–≥', '–í—ñ–¥–±—ñ–π —Ç—Ä–∏–≤–æ–≥–∏'
]

NEGATIVE_KEYWORDS = [
    '—é–º–æ—Ä', '–º–µ–º', '–∞–Ω–µ–∫–¥–æ—Ç', '—Ä–µ–∫–ª–∞–º–∞', '–∫–æ—Ç–∏–∫', '–∫–æ—Ç–∏–∫–∏', '–ø—ñ–¥–ø–∏—Å—É–π—Å—è',
    '–ø—ñ–¥–ø–∏—à–∏—Å—å', '—Ä–æ–∑—ñ–≥—Ä–∞—à', '–∫–æ–Ω–∫—É—Ä—Å', '–ø–æ–≥–æ–¥–∞', '–∞—Ñ—ñ—à–∞', '–≥–æ—Ä–æ—Å–∫–æ–ø',
    '—Ü–∏—Ç–∞—Ç–∞', '–∑–Ω–∏–∂–∫–∞', '–∞–∫—Ü—ñ—è', '–Ω–∞ —â–∏—Ç—ñ', '–∫–æ–ª—è—Å–∫–∏'
]

# –ü–∞–ø–∫–∞ –¥–ª—è –º–µ–¥–∏–∞ (–µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è)
MEDIA_FOLDER = '/app/Telethon_Media'
os.makedirs(MEDIA_FOLDER, exist_ok=True)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@client.on(events.NewMessage(chats=MONITORED_CHANNELS))
async def handler(event):
    print("üî• –°—Ä–∞–±–æ—Ç–∞–ª –æ–±—Ä–∞–±–æ—Ç—á–∏–∫")
    msg_text = event.message.text or ""
    lower_msg = msg_text.lower()
    print(f"üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {msg_text}")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –º–∏–Ω—É—Å-—Å–ª–æ–≤–∞
    for bad in NEGATIVE_KEYWORDS:
        if bad in lower_msg:
            print(f"‚õî –ú–∏–Ω—É—Å-—Å–ª–æ–≤–æ '{bad}' ‚Äî —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è.")
            return

    # –ü–æ–∏—Å–∫ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
    for key in KEYWORDS:
        if key.lower() in lower_msg:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ: {key}")

            # –ü–æ–ø—ã—Ç–∫–∞ —Å–∫–∞—á–∞—Ç—å –º–µ–¥–∏–∞
            file_path = None
            if event.message.media:
                try:
                    file_path = await client.download_media(event.message.media, MEDIA_FOLDER)
                    print(f"üìÅ –ú–µ–¥–∏–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {file_path}")
                except Exception as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –º–µ–¥–∏–∞: {e}")

            # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram –∫–∞–Ω–∞–ª
            try:
                if file_path:
                    await client.send_file(CHANNEL_USERNAME, file_path, caption=f"üö® –ù–æ–≤–∏–Ω–∏:\n{msg_text}")
                else:
                    await client.send_message(CHANNEL_USERNAME, f"üö® –ù–æ–≤–∏–Ω–∏:\n{msg_text}")
                print("üì§ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª.")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")
            break

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async def main():
    await client.start()
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç...")

    # –í—ã–≤–æ–¥ –∫–∞–Ω–∞–ª–æ–≤, –∫ –∫–æ—Ç–æ—Ä—ã–º –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø
    dialogs = await client.get_dialogs()
    print("üìã –ê–∫–∫–∞—É–Ω—Ç –≤–∏–¥–∏—Ç –∫–∞–Ω–∞–ª—ã:")
    for d in dialogs:
        if d.is_channel:
            print(f" - {d.name} | @{getattr(d.entity, 'username', '–Ω–µ—Ç username')}")

    # –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    try:
        await client.send_message(CHANNEL_USERNAME, "‚úÖ –¢–µ—Å—Ç: –±–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–∞: {e}")

    await client.run_until_disconnected()

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    asyncio.run(main())
