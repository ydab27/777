import os
import asyncio
from telethon import TelegramClient, events
from telethon.sessions import StringSession

# üîê –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
API_ID = os.getenv("TELEGRAM_API_ID")
API_HASH = os.getenv("TELEGRAM_API_HASH")
SESSION_STRING = os.getenv("TELETHON_SESSION")

# üö® –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if not API_ID or not API_HASH or not SESSION_STRING:
    print("‚ùå –û—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–¥–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_API_ID / TELEGRAM_API_HASH / TELETHON_SESSION")
    exit(1)

try:
    API_ID = int(API_ID)
except ValueError:
    print("‚ùå –û—à–∏–±–∫–∞: TELEGRAM_API_ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.")
    exit(1)

print("‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")

# üì≤ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
client = TelegramClient(StringSession(SESSION_STRING), API_ID, API_HASH)

# üì® –ö–∞–Ω–∞–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
CHANNEL_USERNAME = '@POVITRYANAZZH'

# üì° –ú–æ–Ω–∏—Ç–æ—Ä–∏–º —ç—Ç–∏ –∫–∞–Ω–∞–ª—ã
MONITORED_CHANNELS = [
    '@INSIDERUKR', '@BLYSKAVKA_UA', '@VANEK_NIKOLAEV',
    '@MON1TOR_UA', '@ZHYTO_BEST', '@KUDY_LETYT',
    '@ALARMUKRAINE', '@RAKETA_TREVOGA'
]

# üéØ –ö–ª—é—á–µ–≤—ã–µ –∏ üö´ –ú–∏–Ω—É—Å-—Å–ª–æ–≤–∞
KEYWORDS = [
    '—Ä–∞–∫–µ—Ç–Ω–∞—è –∞—Ç–∞–∫–∞', '–ø–æ–≤—ñ—Ç—Ä—è–Ω–∞ —Ç—Ä–∏–≤–æ–≥–∞', '–≤–æ–∑–¥—É—à–Ω–∞—è —Ç—Ä–µ–≤–æ–≥–∞', '–ñ–∏—Ç–æ–º–∏—Ä', '–ë–ø–õ–ê',
    '–û–∑–µ—Ä–Ω–µ', '–ñ–∏—Ç–æ–º–∏—Ä–∞', '–ñ–∏—Ç–æ–º–∏—Ä—â–∏–Ω–∞', '–ñ–∏—Ç–æ–º—â–∏–Ω—É', '–ñ–∏—Ç–æ–º—â–∏–Ω–∏', '–ñ–∏—Ç–æ–º—Å—å–∫—É',
    '–ñ–∏—Ç–æ–º—Å—å–∫–æ—ó', '–ñ–∏—Ç–æ–º–∏—Ä—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å', '–ë–∞–ª—ñ—Å—Ç–∏–∫–∞', '–ó–∞–≥—Ä–æ–∑–∞ –±–∞–ª—ñ—Å—Ç–∏–∫–∏', '–ú–æ–ø–µ–¥–∏',
    '–®–∞—Ö–µ–¥–∏', '–®–∞—Ö–µ–¥—ã', '–º–æ–ø–µ–¥—ã', '—à–∞—Ö–µ–¥–æ–≤', '—à–∞—Ö–µ–¥—ñ–≤', '–º–æ–ø–µ–¥–æ–≤', '–º–æ–ø–µ–¥–∏',
    '–º–æ–ø–µ–¥', '—à–∞—Ö–µ–¥', '—Ä–∞–∫–µ—Ç–∞', '—Ä–∞–∫–µ—Ç—ã', '–±–∞–ª—ñ—Å—Ç–∏–∫–∏', '–ö–ê–ë', '—Ä–∞–∫–µ—Ç–æ–π',
    '—Ä–∞–∫–µ—Ç–Ω–∞ –Ω–µ–±–µ–∑–ø–µ–∫–∞', '–±–∞–ª–∏—Å—Ç–∏–∫–æ–π', '—Ç—É-95', '–¢—É-22–ú3', '–¶—ñ–ª—å –Ω–∞', '–¶–µ–ª—å –Ω–∞',
    '–í—Ç—Ä–∞—Ç–∏ –≤—ñ–π—Å—å–∫ —Ä–æ—Å—ñ—ó', '–ê–∫—Ç—É–∞–ª—å–Ω–∞ –∫–∞—Ä—Ç–∞ –ø–æ–≤—ñ—Ç—Ä—è–Ω–∏—Ö —Ç—Ä–∏–≤–æ–≥', '–í—ñ–¥–±—ñ–π —Ç—Ä–∏–≤–æ–≥–∏'
]

NEGATIVE_KEYWORDS = [
    '—é–º–æ—Ä', '–º–µ–º', '–∞–Ω–µ–∫–¥–æ—Ç', '—Ä–µ–∫–ª–∞–º–∞', '–∫–æ—Ç–∏–∫', '–∫–æ—Ç–∏–∫–∏', '–ø—ñ–¥–ø–∏—Å—É–π—Å—è',
    '–ø—ñ–¥–ø–∏—à–∏—Å—å', '—Ä–æ–∑—ñ–≥—Ä–∞—à', '–∫–æ–Ω–∫—É—Ä—Å', '–ø–æ–≥–æ–¥–∞', '–∞—Ñ—ñ—à–∞', '–≥–æ—Ä–æ—Å–∫–æ–ø',
    '—Ü–∏—Ç–∞—Ç–∞', '–∑–Ω–∏–∂–∫–∞', '–∞–∫—Ü—ñ—è', '–Ω–∞ —â–∏—Ç—ñ', '–∫–æ–ª—è—Å–∫–∏'
]

# üìÅ –ü–∞–ø–∫–∞ –¥–ª—è –º–µ–¥–∏–∞
MEDIA_FOLDER = '/app/Telethon_Media'
os.makedirs(MEDIA_FOLDER, exist_ok=True)

# üì• –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
@client.on(events.NewMessage(chats=MONITORED_CHANNELS))
async def handler(event):
    msg_text = event.message.text or ""
    lower_msg = msg_text.lower()
    print(f"üì® –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ {event.chat.username or '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}: {msg_text[:100]}...")

    if any(bad in lower_msg for bad in NEGATIVE_KEYWORDS):
        print("‚õî –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –º–∏–Ω—É—Å-—Å–ª–æ–≤–æ, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è.")
        return

    if any(key.lower() in lower_msg for key in KEYWORDS):
        print("‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ.")
        file_path = None

        if event.message.media:
            try:
                file_path = await client.download_media(event.message.media, MEDIA_FOLDER)
                print(f"üìÅ –ú–µ–¥–∏–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {file_path}")
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–∏–∞: {e}")

        try:
            if file_path:
                await client.send_file(CHANNEL_USERNAME, file_path, caption=f"üö® –ù–æ–≤–∏–Ω–∏:\n{msg_text}")
            else:
                await client.send_message(CHANNEL_USERNAME, f"üö® –ù–æ–≤–∏–Ω–∏:\n{msg_text}")
            print("üì§ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª.")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ –∫–∞–Ω–∞–ª: {e}")

# üß† –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async def main():
    print("üöÄ main() –∑–∞–ø—É—â–µ–Ω–∞")
    await client.start()
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç...")

    try:
        dialogs = await client.get_dialogs()
        print("üìã –ê–∫–∫–∞—É–Ω—Ç –≤–∏–¥–∏—Ç –∫–∞–Ω–∞–ª—ã:")
        for d in dialogs:
            if d.is_channel:
                print(f" - {d.name} | @{getattr(d.entity, 'username', '–Ω–µ—Ç username')}")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤: {e}")

    try:
        await client.send_message(CHANNEL_USERNAME, "‚úÖ –¢–µ—Å—Ç: –±–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç.")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

    await client.run_until_disconnected()

# ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    asyncio.run(main())
