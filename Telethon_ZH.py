import asyncio
import os
import base64
from io import BytesIO
from telethon import TelegramClient, events
from config import API_ID, API_HASH, PHONE

# –ó–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Å—Å–∏–∏
session_data = os.getenv("TELETHON_SESSION")
session_path = "/app/sessions/new_session_name.session"

if session_data:
    os.makedirs("/app/sessions", exist_ok=True)
    with open(session_path, "wb") as f:
        f.write(base64.b64decode(session_data))
    print("‚úÖ –°–µ—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è.")
else:
    print("‚ùå –û—à–∏–±–∫–∞: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è TELETHON_SESSION –ø—É—Å—Ç–∞!")
    exit(1)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
client = TelegramClient(session_path, API_ID, API_HASH)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
CHANNEL_USERNAME = '@ZHZAGROZA'
MEDIA_FOLDER = '/app/Telethon_Media'
os.makedirs(MEDIA_FOLDER, exist_ok=True)

KEYWORDS = [
    '—Ä–∞–∫–µ—Ç–Ω–∞—è –∞—Ç–∞–∫–∞', '–ø–æ–≤—ñ—Ç—Ä—è–Ω–∞ —Ç—Ä–∏–≤–æ–≥–∞', '–≤–æ–∑–¥—É—à–Ω–∞—è —Ç—Ä–µ–≤–æ–≥–∞', '–ñ–∏—Ç–æ–º–∏—Ä', '–ë–ø–õ–ê',
    '–û–∑–µ—Ä–Ω–µ', '–ñ–∏—Ç–æ–º–∏—Ä–∞', '–ñ–∏—Ç–æ–º–∏—Ä—â–∏–Ω–∞', '–ñ–∏—Ç–æ–º—â–∏–Ω—É', '–ñ–∏—Ç–æ–º—â–∏–Ω–∏', '–ñ–∏—Ç–æ–º—Å—å–∫—É',
    '–ñ–∏—Ç–æ–º—Å—å–∫–æ—ó', '–ñ–∏—Ç–æ–º–∏—Ä—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å', '–ë–∞–ª—ñ—Å—Ç–∏–∫–∞', '–ó–∞–≥—Ä–æ–∑–∞ –±–∞–ª—ñ—Å—Ç–∏–∫–∏', '–ú–æ–ø–µ–¥–∏',
    '–®–∞—Ö–µ–¥–∏', '–®–∞—Ö–µ–¥—ã', '–º–æ–ø–µ–¥—ã', '—à–∞—Ö–µ–¥–æ–≤', '—à–∞—Ö–µ–¥—ñ–≤', '–º–æ–ø–µ–¥–æ–≤', '–º–æ–ø–µ–¥–∏',
    '–º–æ–ø–µ–¥', '—à–∞—Ö–µ–¥', '—Ä–∞–∫–µ—Ç–∞', '—Ä–∞–∫–µ—Ç—ã', '–±–∞–ª—ñ—Å—Ç–∏–∫–∏', '–ö–ê–ë', '—Ä–∞–∫–µ—Ç–æ–π',
    '—Ä–∞–∫–µ—Ç–Ω–∞ –Ω–µ–±–µ–∑–ø–µ–∫–∞', '–±–∞–ª–∏—Å—Ç–∏–∫–æ–π', '—Ç—É-95', '–¢—É-22–ú3', '–¶—ñ–ª—å –Ω–∞', '–¶–µ–ª—å –Ω–∞',
    '–í—Ç—Ä–∞—Ç–∏ –≤—ñ–π—Å—å–∫ —Ä–æ—Å—ñ—ó', '–ê–∫—Ç—É–∞–ª—å–Ω–∞ –∫–∞—Ä—Ç–∞ –ø–æ–≤—ñ—Ç—Ä—è–Ω–∏—Ö —Ç—Ä–∏–≤–æ–≥', '–í—ñ–¥–±—ñ–π —Ç—Ä–∏–≤–æ–≥–∏'
]

NEGATIVE_KEYWORDS = [
    '—é–º–æ—Ä', '–º–µ–º', '–∞–Ω–µ–∫–¥–æ—Ç', '—Ä–µ–∫–ª–∞–º–∞', '–∫–æ—Ç–∏–∫', '–∫–æ—Ç–∏–∫–∏', '—Ä–æ–∑—ñ–≥—Ä–∞—à', '–∫–æ–Ω–∫—É—Ä—Å', '–ø–æ–≥–æ–¥–∞', '–∞—Ñ—ñ—à–∞', '–≥–æ—Ä–æ—Å–∫–æ–ø',
    '—Ü–∏—Ç–∞—Ç–∞', '–∑–Ω–∏–∂–∫–∞', '–∞–∫—Ü—ñ—è', '–Ω–∞ —â–∏—Ç—ñ', '–∫–æ–ª—è—Å–∫–∏'
]

# –°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ (–º–æ–∂–µ—à—å –ø–æ—Ç–æ–º —Å–Ω–æ–≤–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä –ø–æ –Ω–∏–º)
MONITORED_CHANNELS = [
    '@INSIDERUKR', '@BLYSKAVKA_UA', '@VANEK_NIKOLAEV', '@MON1TOR_UA',
    '@ZHYTO_BEST', '@KUDY_LETYT', '@ALARMUKRAINE', '@RAKETA_TREVOGA'
]

print("üì° –ë–æ—Ç –ø–æ–¥–ø–∏—Å–∞–Ω –∏ —Å–ª—É—à–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è...")

@client.on(events.NewMessage)  # –¥–ª—è —Ç–µ—Å—Ç–∞: –±–µ–∑ filters –ø–æ chat
async def handler(event):
    print("üî• –°—Ä–∞–±–æ—Ç–∞–ª –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è!")
    message = event.message.text or ""
    print(f"üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message}")

    lower_message = message.lower()

    # –§–∏–ª—å—Ç—Ä –ø–æ –º–∏–Ω—É—Å-—Å–ª–æ–≤–∞–º
    for neg in NEGATIVE_KEYWORDS:
        if neg in lower_message:
            print(f"üö´ –ú–∏–Ω—É—Å-—Å–ª–æ–≤–æ '{neg}' ‚Äî —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ.")
            return

    # –ü–æ–∏—Å–∫ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
    for keyword in KEYWORDS:
        if keyword.lower() in lower_message:
            file_path = None
            if event.message.media:
                try:
                    file_path = await client.download_media(event.message.media, MEDIA_FOLDER)
                    print(f"üìÅ –ú–µ–¥–∏–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {file_path}")
                except Exception as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–µ–¥–∏–∞: {e}")

            try:
                if file_path:
                    await client.send_file(CHANNEL_USERNAME, file_path, caption=f"üö® –ù–æ–≤–∏–Ω–∏: {message}")
                else:
                    await client.send_message(CHANNEL_USERNAME, f"üö® –ù–æ–≤–∏–Ω–∏: {message}")
                print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª.")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")
            break  # —á—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å, –µ—Å–ª–∏ —Å—Ä–∞–±–æ—Ç–∞–ª–æ –æ–¥–Ω–æ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ

async def main():
    await client.start()
    print("ü§ñ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á—ë–Ω.")
    await client.run_until_disconnected()

if __name__ == "__main__":
    asyncio.run(main())

